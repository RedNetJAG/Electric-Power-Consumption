con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlcode <- readLines(con)
close(con)
htmlcode
library(XML)
url <- http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes = T)
xpathSApply(html, "//title", xmlValue)
xpathSApply(html, "//td[@id='col-citedby", xmlValue)
xpathSApply(html, "//td[@id='col-citedby']", xmlValue)
library(httr)
content <- content(html,as="text")
html <- GET(url)
content <- content(html,as="text")
parsedHtml <- htmlParse(content, asText=TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg1 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user","passwd"))
pg1
names(pg1)
install.packages("RMySQL", type"source")
install.packages("RMySQL", type="source")
Sys.getenv('MYSQL_HOME')
q()
install.packages("RMySQL", type="source")
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;")
dbDisconnect(ucscDb)
result
hg19 <- dbConnect(MySQL(),user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
hg19
dbDisconnect(hg19)
length(hg19)
length(allTables)
allTables[12, 45]
allTables[1:5]
is.vector(allTables)
dbListFields(hg19, "HInvGeneMrna")
hg19 <- dbConnect(MySQL(),user="genome", db="hg19",
host="genome-mysql.cse.ucsc.edu")
dbListFields(hg19, "HInvGeneMrna")
dbGetQuery(hg19, "select count(*) from HInvGeneMrna")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
?fetch
affyMisSmall <- fetch(query,n=10)
affyMisSmall
dbClearResult(query)
dim(affyMisSmall)
dbDisconnect(hg19)
library(XML)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv""
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
acs <- getURL(url)
library(RCurl)
acs <- getURL(url)
acs <- read.csv(url)
acs
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select unique * from acs")
acs <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv ")
acs <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
sqldf("select unique * from acs")
unique(acs$AGEP)
acs <- read.csv(url)
url
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url ("http://biostat.jhsph.edu/~jleek/contact.html")
library(XML)
library(httr)
html <- GET(url)
names(html)
head(html)
html <- htmlTreeParse(url, useInternalNodes=T)
html
close(con)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
library(Table)
library(data.table)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
html <- readLine(con)
html <- readLines(con)
close(con)
nchar(htlm[10])
nchar(html[10])
nchar(html[20])
nchar(html[30])
nchar(html[100])
html
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
?readLines
file <- readLines(url)
head(file)
names(file)
file <- read.table(url)
file <- read.table(url)
file <- read.table(file)
f <- read.table(file)
?download.file
myurl <- download.file(url=myurl, destfile="localcopy.for")
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
html <- reaLines(con)
html <- readLines(con)
close(con)
html[10]
?nchar
nchar(html[10], type ="chars")
nchar(html[20], type ="chars")
nchar(html[30], type ="chars")
nchar(html[100], type ="chars")
library(reshape2)
library(plyr)
## Read data from files
features = read.table("./Dataset/features.txt")
activityLabels = read.table("./Dataset/activity_labels.txt")
subjectTrain = read.table("./Dataset/train/subject_train.txt")
xTrain = read.table("./Dataset/train/x_train.txt")
yTrain = read.table("./Dataset/train/y_train.txt")
subjectTest = read.table("./Dataset/test/subject_test.txt")
xTest = read.table("./Dataset/test/x_test.txt")
yTest = read.table("./Dataset/test/y_test.txt")
## Labels the columns
colnames(activityLabels) <- c("activityId", "activityType")
colnames(subjectTrain) <- "subjectId"
colnames(subjectTest) <- "subjectId"
colnames(yTrain) <- "activityId"
colnames(yTest) <- "activityId"
colnames(xTrain) <- features$V2
colnames(xTest) <- features$V2
## Merges de trainig dataset and the test dataset
Training <- cbind(subjectTrain, xTrain, yTrain)
Test <- cbind(subjectTest, xTest, yTest)
## Result for 1.Merges the training and the test sets to create one dataset
TrainingTest <- rbind(Training, Test)
## 2.Extracts only the measurements on the mean and standard deviation
## for each measurement
## extract the colnames to parse them
columnas <- colnames(TrainingTest)
colextract <- grepl("-mean\\(", columnas) | grepl("-std", columnas) | grepl("subjectId", columnas) | grepl("activityId", columnas)
## Result for 2: MeanStd
MeanStd <- TrainingTest[colextract]
## 3.Uses descriptive activity names to name the activities in the data set
TrainingTest <- join(TrainingTest,activityLabels,by="activityId",match="first"")
install.packages(c("boot", "class", "cluster", "codetools", "data.table", "DBI", "devtools", "gsubfn", "Hmisc", "httr", "jsonlite", "KernSmooth", "labeling", "MASS", "mgcv", "quantmod", "Rcpp", "RCurl", "swirl", "testthat", "xlsx", "xlsxjars"))
setwd("F:/Johns Hopkins U - Ciencia de Datos/4 - Exploratory Data Analysis/Home/Electric-Power-Consumption")
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09/10/2014
##
## plot1.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plot
##
##################################################################################
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot2.png", width = 480, height = 480, units = "px")
##Generates the plot
plot(subdata$DateTime, subdata$Global_active_power, type="l", ylab="Global Active Power (kilowatts)", xlab="")
##Close Graphic Device
dev.off()
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09/10/2014
##
## plot1.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plot
##
##################################################################################
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot2.png", width = 480, height = 480, units = "px")
##Generates the plot
plot(data$Global_active_power~data$Datetime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
##Close Graphic Device
dev.off()
View(subdata)
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09/10/2014
##
## plot1.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plot
##
##################################################################################
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot2.png", width = 480, height = 480, units = "px")
##Generates the plot
plot(subdata$Global_active_power~subdata$Datetime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
##Close Graphic Device
dev.off()
?plot
par()
?legend
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09/10/2014
##
## plot1.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plot
##
##################################################################################
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot3.png", width = 480, height = 480, units = "px")
##Generates the plot
with(subdata, { plot(Sub_metering_1~Datetime, type="l", ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')})
legend("topright", col=c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1)
##Close Graphic Device
dev.off()
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09-Oct-2014
##
## plot4.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plots
##
##################################################################################
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot4.png", width = 480, height = 480, units = "px")
##Generates the plot
par(mfcol=c(2,2))
## plot1
with(subdata, plot(Global_active_power~Datetime, type="l", ylab="Global Active Power (kilowatts)", xlab=""))
##plot2
with(subdata, plot(Voltage~Datetime, type="l", ylab="Voltage", xlab="datetime"))
##plot3
with(subdata, { plot(Sub_metering_1~Datetime, type="l", ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')})
legend("topright", col=c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1)
##plot4
with(subdata, plot(Global_reactive_power~Datetime, type="l", ylab="Global_reactive_power", xlab="datetime"))
##Close Graphic Device
dev.off()
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09-Oct-2014
##
## plot4.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plots
##
##################################################################################
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot4.png", width = 480, height = 480, units = "px")
##Generates the plot
par(mfrow=c(2,2))
## plot1
with(subdata, plot(Global_active_power~Datetime, type="l", ylab="Global Active Power (kilowatts)", xlab=""))
##plot2
with(subdata, plot(Voltage~Datetime, type="l", ylab="Voltage", xlab="datetime"))
##plot3
with(subdata, { plot(Sub_metering_1~Datetime, type="l", ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')})
legend("topright", col=c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1)
##plot4
with(subdata, plot(Global_reactive_power~Datetime, type="l", ylab="Global_reactive_power", xlab="datetime"))
##Close Graphic Device
dev.off()
?legend
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09-Oct-2014
##
## plot4.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plots
##
##################################################################################
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot4.png", width = 480, height = 480, units = "px")
##Generates the plot
par(mfrow=c(2,2))
## plot1
with(subdata, plot(Global_active_power~Datetime, type="l", ylab="Global Active Power (kilowatts)", xlab=""))
##plot2
with(subdata, plot(Voltage~Datetime, type="l", ylab="Voltage", xlab="datetime"))
##plot3
with(subdata, { plot(Sub_metering_1~Datetime, type="l", ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')})
legend("topright", col=c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1, bty="n")
##plot4
with(subdata, plot(Global_reactive_power~Datetime, type="l", ylab="Global_reactive_power", xlab="datetime"))
##Close Graphic Device
dev.off()
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09-Oct-2014
##
## plot4.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plots
##
##################################################################################
## Set english as default language
Sys.setlocale("LC_TIME", "English")
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot4.png", width = 480, height = 480, units = "px")
##Generates the plot
par(mfrow=c(2,2))
## plot1
with(subdata, plot(Global_active_power~Datetime, type="l", ylab="Global Active Power (kilowatts)", xlab=""))
##plot2
with(subdata, plot(Voltage~Datetime, type="l", ylab="Voltage", xlab="datetime"))
##plot3
with(subdata, { plot(Sub_metering_1~Datetime, type="l", ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')})
legend("topright", col=c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1, bty="n")
##plot4
with(subdata, plot(Global_reactive_power~Datetime, type="l", ylab="Global_reactive_power", xlab="datetime"))
##Close Graphic Device
dev.off()
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09-Oct-2014
##
## plot3.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plot
##
##################################################################################
## Set english as default language
Sys.setlocale("LC_TIME", "English")
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot3.png", width = 480, height = 480, units = "px")
##Generates the plot
with(subdata, { plot(Sub_metering_1~Datetime, type="l", ylab="Energy sub metering", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')})
legend("topright", col=c("black", "red", "blue"), c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1)
##Close Graphic Device
dev.off()
##################################################################################
## Exploratory Data Analysis
## by Jeff Leek, PhD, Brian Caffo, PhD, Roger D. Peng, PhD
##
## plot1.R by JAGomez
## 09-Oct-2014
##
## plot2.R that does the following:
## 1. Read Data and subset it
## 2. Open Graphic Device PNG
## 3. Create plot
##
##################################################################################
## Set english as default language
Sys.setlocale("LC_TIME", "English")
## Read data from files
data <- read.csv("../exdata_data_household_power_consumption/data.txt", sep=';', na.strings="?", header=T)
## Date format and Subsetting the data
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
subdata <- subset(data, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data)
## Paste and Normalized Date & Time
DateTime <- paste(subdata$Date, subdata$Time)
subdata$Datetime <- as.POSIXct(DateTime)
## Open Graphic Device PNG
png(filename = "plot2.png", width = 480, height = 480, units = "px")
##Generates the plot
plot(subdata$Global_active_power~subdata$Datetime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
##Close Graphic Device
dev.off()
